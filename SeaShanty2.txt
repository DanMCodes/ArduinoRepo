//---------------------------------------------------------\\
//                      Copyright                          \\  
//                Charlie Bergdall 2019                    \\ 
//                     "Sea Shanty 2"                      \\
//---------------------------------------------------------\\


Conversation opened. 1 unread message.

Skip to content
Using Gmail with screen readers
1 of 13
oof jr.

Charlie Bergdall <charliusb@gmail.com>
7:37 AM (0 minutes ago)
to me

void setup() {

  // This initializes an array with all the  in it.
  // To use, simply type noteName[octaveNumber]
  // If a note is sharp or flat, the name is based on the two notes surrounding it.
  int C[] = {16, 33, 65, 131, 262, 523, 1047, 2093, 4186};
  int CD[] = {17, 35, 69, 139, 277, 554, 1109, 2217, 4435};
  int D[] = {18, 37, 73, 147, 294, 587, 1175, 2349, 4699};
  int DE[] = {19, 39, 78, 156, 311, 622, 1245, 2489, 4978};
  int E[] = {21, 41, 82, 165, 330, 659, 1319, 2637, 5274};
  int F[] = {22, 44, 87, 175, 349, 699, 1397,  2794, 5588};
  int FG[] = {23, 46, 93, 185, 370, 740, 1480, 2960, 5920};
  int G[] = {25, 49, 98, 196, 392, 784, 1568, 3136, 6272};
  int GA[] = {26, 52, 104, 208, 415, 831, 1661, 3322, 6645};
  int A[] = {28, 55, 110, 220, 440, 880, 1760, 3520, 7040};
  int AB[] = {29, 58, 117, 233, 466, 932, 1865, 3729, 7459};
  int B[] = {31, 62, 124, 247, 494, 988, 1976, 3951, 7902};

  // change time values for quarter. Others will follow suit.
  int quarter = 550;
  int whole = quarter*4;
  int dotHalf = quarter*3;
  int half = quarter*2;
  int eighth = quarter/2;
  int sixteenth = quarter/4;
  int thirtySecond = sixteenth/2;
  int dotSixteenth = thirtySecond*3;
  int dotEighth = sixteenth*3;
  int d = 50; // constant note delay  

  for(int i; i<2; i++) {} // loop for song to play ____ times. change x if x is for(int i; i<x; i++){} to change how many times to play songs

  tone(12, A[5], eighth); // tone plays a sound
  delay(eighth+d);
  tone(12, E[5], sixteenth); // 12 for port on Arduino
  delay(sixteenth+d);
  tone(12, D[5], sixteenth); // 2nd value is for frequency from array above.
  delay(sixteenth+d);
  tone(12, CD[5], dotEighth); // set 3rd value as the type of note from list above.
  delay(dotEighth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], sixteenth);
  delay(sixteenth+d);
  tone(12, FG[5], sixteenth);
  delay(sixteenth+d);
  tone(12, GA[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], quarter);
  delay(quarter+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, B[4], eighth);
  delay(eighth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, D[5], quarter);
  delay(quarter+d);
  
  tone(12, A[5], eighth);
  delay(eighth+d);
  tone(12, E[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], sixteenth);
  delay(sixteenth+d);
  tone(12, FG[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], quarter);
  delay(quarter+d);
  
// New line
  
  tone(12, FG[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, FG[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, A[4], quarter);
  delay(quarter+d);
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, B[4], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);
  
  tone(12, A[4], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, B[4], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);
  delay(quarter);
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], eighth);
  delay(eighth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);

  // New line
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, A[4], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);
  delay(quarter);
  
  tone(12, E[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, E[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, FG[5], eighth);
  delay(eighth+d);
  tone(12, E[5], quarter);
  delay(quarter+d);
  
  tone(12, GA[5], eighth);
  delay(eighth+d);
  tone(12, GA[5], sixteenth);
  delay(sixteenth+d);
  tone(12, FG[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, D[5], eighth);
  delay(eighth+d);
  tone(12, E[5], half);
  delay(half+d);
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], eighth);
  delay(eighth+d);
  tone(12, B[4], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);

  // New line
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, A[4], eighth);
  delay(eighth+d);
  tone(12, A[3], quarter);
  delay(quarter+d);
  delay(quarter);
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, B[4], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);
  
  tone(12, A[4], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, B[4], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);
  delay(quarter);
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], eighth);
  delay(eighth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);

  //New line
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, A[4], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);
  delay(quarter);
  
  tone(12, E[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, E[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, FG[5], eighth);
  delay(eighth+d);
  tone(12, E[5], quarter);
  delay(quarter+d);
  
  tone(12, GA[5], eighth);
  delay(eighth+d);
  tone(12, GA[5], sixteenth);
  delay(sixteenth+d);
  tone(12, FG[5], sixteenth);
  delay(sixteenth+d);
  tone(12, E[5], eighth);
  delay(eighth+d);
  tone(12, D[5], eighth);
  delay(eighth+d);
  tone(12, E[5], half);
  delay(half+d);
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], eighth);
  delay(eighth+d);
  tone(12, B[4], eighth);
  delay(eighth+d);
  tone(12, CD[5], quarter);
  delay(quarter+d);

  // New line
  
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, B[4], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], sixteenth);
  delay(sixteenth+d);
  tone(12, D[5], sixteenth);
  delay(sixteenth+d);
  tone(12, CD[5], eighth);
  delay(eighth+d);
  tone(12, A[4], eighth);
  delay(eighth+d);
  tone(12, A[3], half);
  delay(half+d);
  
  delay(whole);

  delay(whole);

  delay(whole);

  // New line

  delay(whole);
  
  // skipping the rest of the line after the four whole rests.
  // it still needs to be filled in
  // below starts the next line

  // New line
  
//  tone(12, CD[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, E[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, A[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, G[6], sixteenth);
//  delay(sixteenth+d);
//  tone(12, FG[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, E[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, D[6], eighth);
//  delay(eighth+d);
//  delay(sixteenth);
//  tone(12, E[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], eighth);
//  delay(eighth+d);
//  tone(12, E[6], sixteenth);
//  delay(sixteenth+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, A[5], eighth);
//  delay(eighth+d);
//  
//  tone(12, A[5], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, B[5], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, E[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, B[5], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], eighth);
//  delay(eighth+d);
//  tone(12, G[5], eighth);
//  delay(eighth+d);
//  tone(12, A[5], quarter);
//  delay(quarter+d);
//
//  // New line
//  
//  // skipping weird section again (its the same as above notes)!
//
//  // New line
//  
//  tone(12, CD[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, E[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, A[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, G[6], sixteenth);
//  delay(sixteenth+d);
//  tone(12, FG[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, E[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, D[6], eighth);
//  delay(eighth+d);
//  delay(sixteenth);
//  tone(12, E[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], eighth);
//  delay(eighth+d);
//  tone(12, E[6], sixteenth);
//  delay(sixteenth+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, A[5], eighth);
//  delay(eighth+d);
//  
//  tone(12, A[5], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, B[5], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, E[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, D[6], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, B[5], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, CD[6], eighth);
//  delay(eighth+d);
//  tone(12, G[5], eighth);
//  delay(eighth+d);
//  tone(12, A[5], quarter);
//  delay(quarter+d);
//
//  // New line
//  
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, FG[4], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, G[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], eighth);
//  delay(eighth+d);
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, FG[4], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, G[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], eighth);
//  delay(eighth+d);
//  
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, FG[4], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, G[4], eighth);
//  delay(eighth+d);
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, B[4], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, A[4], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, B[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], eighth);
//  delay(eighth+d);
//  
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, FG[4], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, G[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], eighth);
//  delay(eighth+d);
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, FG[4], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, G[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], eighth);
//  delay(eighth+d);
//
//  // New line
//  
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, FG[4], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, G[4], eighth);
//  delay(eighth+d);
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, B[4], eighth);
//  delay(eighth+d);
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  delay(eighth);
//  tone(12, E[4], eighth);
//  delay(eighth+d);
//  
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, FG[4], thirtySecond);
//  delay(thirtySecond+d);
//  tone(12, G[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], eighth);
//  delay(eighth+d);
//  tone(12, A[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], dotSixteenth);
//  delay(dotSixteenth+d);
//  tone(12, FG[4], thirtySecond); 
//  delay(thirtySecond+d);
//  tone(12, G[4], eighth);
//  delay(eighth+d);
//  tone(12, E[4], eighth);
//  delay(eighth+d);

  // New line

  // Start of zelda theme

  
}

void loop() {
  
}
